@model VegaModel.VegetableModel

@{
    ViewBag.Title = "Modify Vegetables";
}
<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
         <div class="col-md-6 my-3">
            <div class="card card-outline-secondary">
                <div class="card-body">
                    <form class="form" role="form" autocomplete="off">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        <div class="form-group row">
                             
                            @Html.LabelFor(model => model.Vegetable, htmlAttributes: new { @class = "col-lg-3 col-form-label form-control-label" })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.Vegetable, new { htmlAttributes = new { @class = "form-control", @id = "textVegname", onBlur = "CheckAvailability()" } })

                                @Html.ValidationMessageFor(model => model.Vegetable, "", new { @class = "text-danger" })
                                <span id="message" class="field-validation-valid" data-valmsg-for="txtMerge" data-valmsg-replace="true"></span>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Arhat, htmlAttributes: new { @class = "col-lg-3 col-form-label form-control-label" })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.Arhat, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Arhat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Laga, htmlAttributes: new { @class = "col-lg-3 col-form-label form-control-label" })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.Laga, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Laga, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.RDF, htmlAttributes: new { @class = "col-lg-3 col-form-label form-control-label" })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.RDF, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RDF, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.MDF, htmlAttributes: new { @class = "col-lg-3 col-form-label form-control-label" })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.MDF, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MDF, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Bardana, htmlAttributes: new { @class = "col-lg-3 col-form-label form-control-label" })
                            <div class="col-lg-6">
                                @Html.EditorFor(model => model.Bardana, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Bardana, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Crate, htmlAttributes: new { @class = "col-lg-3 col-form-label form-control-label" })
                            <div class="col-lg-6">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Crate)
                                    @Html.ValidationMessageFor(model => model.Crate, "", new { @class = "form-check-input" })
                                </div>
                            </div>
                        </div>

                        @Html.Hidden("InVegname", Model.Vegetable)
                        <div class="form-group row">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />
                                <a href='@Url.Action("Index", "Vegetable")' class="btn btn-primary">Back To List</a>
                            </div>

                        </div>
                       
                    </form>
                 </div>
                </div>
             </div>
        </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
      function CheckAvailability() {
        var vegetable = $("#textVegname").val();
        $.ajax({
            type: "POST",
            url: "/Vegetable/IsVegNameExists",
            data: '{vegetable: "' + vegetable + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var message = $("#message");
                if (response) {
                    message.css("color", "red");
                    message.html("Vegetable is NOT available");
                     }
                else {
                           message.html("");
                }
            }
        });
    };
    </script>
}

